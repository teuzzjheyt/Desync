-- Serviços
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Player
local player = Players.LocalPlayer

-- Estados
local desyncActive = false

-- UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CustomUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = game:GetService("CoreGui")

-- Botão principal (MENOR) - POSIÇÃO ABAIXO DA OUTRA UI
local desyncButton = Instance.new("TextButton")
desyncButton.Size = UDim2.new(0, 100, 0, 40)  -- Tamanho menor
desyncButton.Position = UDim2.new(0, 20, 0, 140)  -- 20px da esquerda, 140px do topo (abaixo da outra)
desyncButton.Text = "Desync"  -- Nome alterado
desyncButton.Font = Enum.Font.Arcade
desyncButton.TextSize = 14    -- Texto menor
desyncButton.TextColor3 = Color3.fromRGB(255, 255, 255)
desyncButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
desyncButton.AutoButtonColor = false
desyncButton.Active = true
desyncButton.Draggable = false
desyncButton.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)  -- Cantos mais suaves para botão menor
corner.Parent = desyncButton

local uiStroke = Instance.new("UIStroke")
uiStroke.Thickness = 2        -- Borda mais fina
uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uiStroke.Parent = desyncButton

-- Sistema de arrastar
local dragging = false
local dragInput, dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    desyncButton.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

desyncButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = desyncButton.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

desyncButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

-- Efeito RGB
task.spawn(function()
    local hue = 0
    while desyncButton.Parent do
        hue = (hue + 2) % 360
        uiStroke.Color = Color3.fromHSV(hue / 360, 1, 1)
        desyncButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
        task.wait(0.05)
    end
end)

-- Função de notificação
local function showNotification(message)
    local playerGui = player:WaitForChild("PlayerGui")
    
    local notificationGui = Instance.new("ScreenGui")
    notificationGui.Name = "WindowsNotification"
    notificationGui.ResetOnSpawn = false
    notificationGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    notificationGui.DisplayOrder = 99999
    notificationGui.Parent = playerGui
    
    local notificationFrame = Instance.new("Frame")
    notificationFrame.Size = UDim2.new(0, 320, 0, 70)
    notificationFrame.Position = UDim2.new(1, -340, 1, -80)
    notificationFrame.AnchorPoint = Vector2.new(0, 0)
    notificationFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    notificationFrame.BackgroundTransparency = 0.1
    notificationFrame.BorderSizePixel = 1
    notificationFrame.BorderColor3 = Color3.fromRGB(80, 80, 80)
    notificationFrame.ZIndex = 100000
    notificationFrame.Parent = notificationGui
    
    local notificationCorner = Instance.new("UICorner")
    notificationCorner.CornerRadius = UDim.new(0, 5)
    notificationCorner.Parent = notificationFrame
    
    local shadow = Instance.new("UIStroke")
    shadow.Thickness = 1
    shadow.Color = Color3.fromRGB(100, 100, 100)
    shadow.Transparency = 0.5
    shadow.Parent = notificationFrame
    
    local sideBar = Instance.new("Frame")
    sideBar.Size = UDim2.new(0, 4, 1, 0)
    sideBar.Position = UDim2.new(0, 0, 0, 0)
    sideBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    sideBar.BorderSizePixel = 0
    sideBar.ZIndex = 100001
    sideBar.Parent = notificationFrame
    
    task.spawn(function()
        local hue = 0
        while sideBar.Parent do
            hue = (hue + 5) % 360
            sideBar.BackgroundColor3 = Color3.fromHSV(hue / 360, 1, 1)
            task.wait(0.1)
        end
    end)
    
    local notificationLabel = Instance.new("TextLabel")
    notificationLabel.Size = UDim2.new(0, 300, 0, 40)
    notificationLabel.Position = UDim2.new(0, 15, 0, 25)
    notificationLabel.BackgroundTransparency = 1
    notificationLabel.Text = message
    notificationLabel.Font = Enum.Font.Gotham
    notificationLabel.TextSize = 14
    notificationLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    notificationLabel.TextXAlignment = Enum.TextXAlignment.Left
    notificationLabel.TextYAlignment = Enum.TextYAlignment.Top
    notificationLabel.TextWrapped = true
    notificationLabel.ZIndex = 100001
    notificationLabel.Parent = notificationFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(0, 300, 0, 20)
    titleLabel.Position = UDim2.new(0, 15, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "Nex Scripts"
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 16
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.ZIndex = 100001
    titleLabel.Parent = notificationFrame
    
    local startPosX = notificationFrame.Position.X.Offset
    notificationFrame.Position = UDim2.new(1, 400, 1, -80)
    
    for i = 1, 20 do
        notificationFrame.Position = UDim2.new(1, startPosX + (20 - i) * 20, 1, -80)
        task.wait(0.02)
    end
    
    notificationFrame.Position = UDim2.new(1, -340, 1, -80)
    
    task.wait(3.5)
    
    for i = 1, 20 do
        notificationFrame.Position = UDim2.new(1, -340 + (i * 20), 1, -80)
        task.wait(0.02)
    end
    
    notificationGui:Destroy()
end

-- Tela Nex Scripts com tempo sincronizado com o desync
local function showNexScreen(desyncDuration)
    local playerGui = player:WaitForChild("PlayerGui")
    
    local blackScreenGui = Instance.new("ScreenGui")
    blackScreenGui.Name = "BlackScreenOverlay"
    blackScreenGui.ResetOnSpawn = false
    blackScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    blackScreenGui.DisplayOrder = 99999
    blackScreenGui.IgnoreGuiInset = true
    blackScreenGui.Parent = playerGui
    
    local fadeFrame = Instance.new("Frame")
    fadeFrame.Size = UDim2.new(1, 0, 1, 0)
    fadeFrame.Position = UDim2.new(0, 0, 0, 0)
    fadeFrame.AnchorPoint = Vector2.new(0, 0)
    fadeFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    fadeFrame.BackgroundTransparency = 0.1
    fadeFrame.BorderSizePixel = 0
    fadeFrame.ZIndex = 99999
    fadeFrame.Parent = blackScreenGui

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.AnchorPoint = Vector2.new(0, 0)
    label.BackgroundTransparency = 1
    label.Text = "Nex Scripts"
    label.Font = Enum.Font.GothamBlack
    label.TextSize = 52
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextStrokeTransparency = 0.7
    label.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    label.TextTransparency = 0
    label.ZIndex = 100000
    label.Parent = fadeFrame

    task.spawn(function()
        local hue = 0
        while label.Parent do
            hue = (hue + 1) % 360
            local r, g, b = Color3.fromHSV(hue / 360, 0.8, 1):ToRGB()
            label.TextColor3 = Color3.fromRGB(math.floor(r * 255), math.floor(g * 255), math.floor(b * 255))
            task.wait(0.1)
        end
    end)

    -- Texto do tempo restante
    local timeLabel = Instance.new("TextLabel")
    timeLabel.Size = UDim2.new(1, 0, 0, 30)
    timeLabel.Position = UDim2.new(0, 0, 0.75, 0)
    timeLabel.AnchorPoint = Vector2.new(0, 0)
    timeLabel.BackgroundTransparency = 1
    timeLabel.Text = "Tempo Desync: " .. string.format("%.1fs", desyncDuration)
    timeLabel.Font = Enum.Font.GothamBold
    timeLabel.TextSize = 20
    timeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    timeLabel.TextStrokeTransparency = 0.7
    timeLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    timeLabel.ZIndex = 100000
    timeLabel.Parent = fadeFrame

    -- Efeito RGB para o tempo
    task.spawn(function()
        local hue = 0
        while timeLabel.Parent do
            hue = (hue + 8) % 360
            timeLabel.TextColor3 = Color3.fromHSV(hue / 360, 1, 1)
            task.wait(0.05)
        end
    end)

    local progressBarContainer = Instance.new("Frame")
    progressBarContainer.Size = UDim2.new(0.6, 0, 0, 20)
    progressBarContainer.Position = UDim2.new(0.2, 0, 0.85, 0)
    progressBarContainer.AnchorPoint = Vector2.new(0, 0)
    progressBarContainer.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    progressBarContainer.BackgroundTransparency = 0.2
    progressBarContainer.BorderSizePixel = 0
    progressBarContainer.ZIndex = 100000
    progressBarContainer.Parent = fadeFrame

    local progressBarCorner = Instance.new("UICorner")
    progressBarCorner.CornerRadius = UDim.new(0, 10)
    progressBarCorner.Parent = progressBarContainer

    local progressBar = Instance.new("Frame")
    progressBar.Size = UDim2.new(0, 0, 1, 0)
    progressBar.Position = UDim2.new(0, 0, 0, 0)
    progressBar.AnchorPoint = Vector2.new(0, 0)
    progressBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    progressBar.BorderSizePixel = 0
    progressBar.ZIndex = 100001
    progressBar.Parent = progressBarContainer

    local progressBarInnerCorner = Instance.new("UICorner")
    progressBarInnerCorner.CornerRadius = UDim.new(0, 10)
    progressBarInnerCorner.Parent = progressBar

    task.spawn(function()
        local hue = 0
        while progressBar.Parent do
            hue = (hue + 8) % 360
            progressBar.BackgroundColor3 = Color3.fromHSV(hue / 360, 1, 1)
            task.wait(0.05)
        end
    end)

    task.spawn(function()
        local duration = desyncDuration -- Usa o tempo exato do desync
        local startTime = tick()
        
        while tick() - startTime < duration do
            local elapsed = tick() - startTime
            local progress = elapsed / duration
            local remaining = duration - elapsed
            local remainingFormatted = string.format("%.1fs", remaining)
            
            -- Atualizar barra de progresso
            progressBar.Size = UDim2.new(progress, 0, 1, 0)
            
            -- Atualizar texto do tempo restante
            timeLabel.Text = "Tempo Desync: " .. remainingFormatted
            
            task.wait(0.02)
        end
        
        -- Finalizar
        progressBar.Size = UDim2.new(1, 0, 1, 0)
        timeLabel.Text = "Tempo Desync: 0.0s"
        task.wait(0.1)
        blackScreenGui:Destroy()
        showNotification("Desync Completed!\nClone teleported successfully.")
    end)
end

-- Sistema Desync com tempo variável
local function enableMobileDesync()
    local success, error = pcall(function()
        local backpack = player:WaitForChild("Backpack")
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")

        local packages = ReplicatedStorage:WaitForChild("Packages", 5)
        if not packages then return false end

        local netFolder = packages:WaitForChild("Net", 5)
        if not netFolder then return false end

        local useItemRemote = netFolder:WaitForChild("RE/UseItem", 5)
        local teleportRemote = netFolder:WaitForChild("RE/QuantumCloner/OnTeleport", 5)
        if not useItemRemote or not teleportRemote then return false end

        local toolNames = {"Quantum Cloner", "Brainrot", "brainrot"}
        local tool
        for _, toolName in ipairs(toolNames) do
            tool = backpack:FindFirstChild(toolName) or character:FindFirstChild(toolName)
            if tool then break end
        end
        if not tool then
            for _, item in ipairs(backpack:GetChildren()) do
                if item:IsA("Tool") then tool = item break end
            end
        end

        if tool and tool.Parent == backpack then
            humanoid:EquipTool(tool)
            task.wait(0.5)
        end

        if setfflag then setfflag("WorldStepMax", "-9999999999") end
        task.wait(0.2)
        useItemRemote:FireServer()
        
        -- Tempo do desync (pode ser ajustado)
        local desyncTime = 1.5
        task.wait(desyncTime)
        
        teleportRemote:FireServer()
        task.wait(2)
        if setfflag then setfflag("WorldStepMax", "-1") end
        return true, desyncTime
    end)
    
    return success
end

local function disableMobileDesync()
    pcall(function()
        if setfflag then setfflag("WorldStepMax", "-1") end
    end)
end

-- SISTEMA DESYNC APENAS
local function activateDesync()
    if desyncActive then return end
    
    desyncActive = true
    
    -- Tempo do desync (mesmo valor usado na função enableMobileDesync)
    local desyncDuration = 1.5
    showNexScreen(desyncDuration)
    
    -- EXECUTAR DESYNC
    task.spawn(function()
        local success = enableMobileDesync()
        
        if success then
            showNotification("✅ DESYNC ACTIVATED\nQuantum Cloner executed successfully!")
            desyncButton.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
            print("🎯 Desync Ativado com sucesso!")
        else
            showNotification("❌ Desync Activation Failed")
            desyncButton.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
            desyncActive = false
        end
    end)
end

local function deactivateDesync()
    desyncActive = false
    disableMobileDesync()
    desyncButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    showNotification("🔴 Desync Deactivated")
end

-- Controles
desyncButton.MouseButton1Click:Connect(function()
    if not desyncActive then
        activateDesync()
    else
        deactivateDesync()
    end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.Y then
        if not desyncActive then
            activateDesync()
        else
            deactivateDesync()
        end
    end
end)

-- Reconectar quando o personagem morrer
player.CharacterAdded:Connect(function(character)
    desyncActive = false
    desyncButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
end)

-- Iniciar
showNotification("🎯 DESYNC LOADED\nPress [Y] to activate DESYNC\nQuantum Cloner - 1.5s speed")
